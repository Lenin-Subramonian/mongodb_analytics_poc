# docker-compose.yml - Multi-service orchestration
version: '3.8'

services:
  # Main ETL Application
  mongodb-etl:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: mongodb-analytics-etl
    environment:
      # Load from .env file
      - MONGODB_ATLAS_USERNAME=${MONGODB_ATLAS_USERNAME}
      - MONGODB_ATLAS_PASSWORD=${MONGODB_ATLAS_PASSWORD}
      - MONGODB_ATLAS_CLUSTER=${MONGODB_ATLAS_CLUSTER}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_COLLECTION=${MONGODB_COLLECTION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - LOG_LEVEL=${LOG_LEVEL}
      - BATCH_SIZE=${BATCH_SIZE}
      - SPARK_DRIVER_MEMORY=${SPARK_DRIVER_MEMORY}
      - SPARK_EXECUTOR_MEMORY=${SPARK_EXECUTOR_MEMORY}
      - SPARK_EXECUTOR_CORES=${SPARK_EXECUTOR_CORES}
    volumes:
      # Mount source code for development
      - ./src:/app/src:ro
      - ./scripts:/app/scripts:ro
      - ./config:/app/config:ro
      # Mount data and logs directories
      - ./data:/app/data
      - ./logs:/app/logs
      # Mount notebooks for Jupyter
      - ./notebooks:/app/notebooks
    ports:
      - "4040:4040"  # Spark UI
      - "4041:4041"  # Spark History Server
    networks:
      - analytics-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import pyspark; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Jupyter Lab for Interactive Analysis
  jupyter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: mongodb-analytics-jupyter
    command: >
      bash -c "jupyter lab 
      --ip=0.0.0.0 
      --port=8888 
      --no-browser 
      --allow-root 
      --NotebookApp.token=${JUPYTER_TOKEN:-analytics123} 
      --NotebookApp.notebook_dir=/app/notebooks"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-analytics123}
    volumes:
      - ./src:/app/src:ro
      - ./notebooks:/app/notebooks
      - ./data:/app/data
    ports:
      - "8888:8888"  # Jupyter Lab
    networks:
      - analytics-network
    depends_on:
      - mongodb-etl
    restart: unless-stopped

  # Optional: Local MongoDB for Development
  mongodb:
    image: mongo:7.0
    container_name: mongodb-local
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - analytics-network
    restart: unless-stopped
    # Only start if using local MongoDB
    profiles: ["local-mongo"]

  # Optional: MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: mongodb-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    ports:
      - "8081:8081"
    networks:
      - analytics-network
    depends_on:
      - mongodb
    profiles: ["local-mongo"]
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  analytics-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16